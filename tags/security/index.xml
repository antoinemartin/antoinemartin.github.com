<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on mrtn.me</title><link>http://mrtn.me/tags/security/</link><description>Recent content in Security on mrtn.me</description><generator>Hugo</generator><language>en-us</language><managingEditor>antoine@mrtn.me (Antoine Martin)</managingEditor><webMaster>antoine@mrtn.me (Antoine Martin)</webMaster><lastBuildDate>Wed, 30 Jul 2025 18:39:54 +0200</lastBuildDate><atom:link href="http://mrtn.me/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Checking Google Play Signatures With Django</title><link>http://mrtn.me/posts/2012/03/12/checking-google-play-signatures-with-django/</link><pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate><author>antoine@mrtn.me (Antoine Martin)</author><guid>http://mrtn.me/posts/2012/03/12/checking-google-play-signatures-with-django/</guid><description>&lt;p>Google play, formerly known as the Android Market, provides in-app billing in
several countries. In the
&lt;a href="http://developer.android.com/guide/market/billing/billing_best_practices.html" target="_blank" rel="noopener noreffer ">Security and Design&lt;/a>
page, Google states the following:&lt;/p>
&lt;blockquote>
&lt;p>If practical, you should perform signature verification on a remote server and
not on a device. Implementing the verification process on a server makes it
difficult for attackers to break the verification process by reverse
engineering your .apk file. If you do offload security processing to a remote
server, be sure that the device-server handshake is secure.&lt;/p></description></item></channel></rss>