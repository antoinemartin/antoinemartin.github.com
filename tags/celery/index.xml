<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Celery on mrtn.me</title><link>http://mrtn.me/tags/celery/</link><description>Recent content in Celery on mrtn.me</description><generator>Hugo</generator><language>en-us</language><managingEditor>antoine@mrtn.me (Antoine Martin)</managingEditor><webMaster>antoine@mrtn.me (Antoine Martin)</webMaster><lastBuildDate>Wed, 30 Jul 2025 18:39:54 +0200</lastBuildDate><atom:link href="http://mrtn.me/tags/celery/index.xml" rel="self" type="application/rss+xml"/><item><title>Django on Windows: Run Celery as a Windows Service</title><link>http://mrtn.me/posts/2012/07/04/django-on-windows-run-celery-as-a-windows-service/</link><pubDate>Wed, 04 Jul 2012 00:00:00 +0000</pubDate><author>antoine@mrtn.me (Antoine Martin)</author><guid>http://mrtn.me/posts/2012/07/04/django-on-windows-run-celery-as-a-windows-service/</guid><description>&lt;p>In my
&lt;a href="http://mrtn.me/posts/2012/06/27/running-django-under-windows-with-iis-using-fcgi/" rel="">previous post&lt;/a>,
I showed how to set up a Django project on a Windows Server to be served behind
IIS. After setting up the server, the next thing we want with a Django
application is to be able to run background and scheduled tasks, and
&lt;a href="http://celeryproject.org/" target="_blank" rel="noopener noreffer ">Celery&lt;/a> is the perfect tool for that.&lt;/p>
&lt;!-- more -->
&lt;p>On Windows, background processes are mostly run as Windows Services.
Fortunately,
&lt;a href="http://sourceforge.net/projects/pywin32/" target="_blank" rel="noopener noreffer ">Python for Windows Extensions&lt;/a> (a.k.a
pywin32) provides facilities to create a Windows Service.&lt;/p></description></item></channel></rss>