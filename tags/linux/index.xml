<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on mrtn.me</title><link>http://mrtn.me/tags/linux/</link><description>Recent content in Linux on mrtn.me</description><generator>Hugo</generator><language>en-us</language><managingEditor>antoine@mrtn.me (Antoine Martin)</managingEditor><webMaster>antoine@mrtn.me (Antoine Martin)</webMaster><lastBuildDate>Thu, 31 Jul 2025 14:07:16 +0200</lastBuildDate><atom:link href="http://mrtn.me/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Unlock and Root a Nexus Device</title><link>http://mrtn.me/posts/2012/10/25/unlock-and-root-a-nexus-device/</link><pubDate>Thu, 25 Oct 2012 00:00:00 +0000</pubDate><author>antoine@mrtn.me (Antoine Martin)</author><guid>http://mrtn.me/posts/2012/10/25/unlock-and-root-a-nexus-device/</guid><description>&lt;p>Having an unlocked and rooted device provides several advantages :&lt;/p>
&lt;ul>
&lt;li>Easy backup and restore with Nandroid backup,&lt;/li>
&lt;li>Easy firmware replacement and updates installation,&lt;/li>
&lt;li>Advanced debugging capabilities.&lt;/li>
&lt;/ul>
&lt;p>The following instructions allow unlocking and rooting a Nexus device (Galaxy
Nexus, Nexus 7) from the command line on a Linux machine. It involves:&lt;/p>
&lt;ul>
&lt;li>Backuping your device,&lt;/li>
&lt;li>Unlocking the bootloader,&lt;/li>
&lt;li>Restoring the backup,&lt;/li>
&lt;li>Rooting the device.&lt;/li>
&lt;/ul>
&lt;!-- More -->
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>Here is the list of prerequisites :&lt;/p></description></item><item><title>Quickly Deploy a Git Project on a Server With Ssh</title><link>http://mrtn.me/posts/2012/10/24/quickly-deploy-a-git-project-on-a-server-with-ssh/</link><pubDate>Wed, 24 Oct 2012 00:00:00 +0000</pubDate><author>antoine@mrtn.me (Antoine Martin)</author><guid>http://mrtn.me/posts/2012/10/24/quickly-deploy-a-git-project-on-a-server-with-ssh/</guid><description>&lt;p>So you have this brand new project &lt;code>my_project&lt;/code> of yours with your local Git
repository set up and you want to quickly make it available for others to clone
on your repository server.&lt;/p>
&lt;p>All your projects are located in your server &lt;code>git.mycompany.com&lt;/code> under
&lt;code>/srv/git&lt;/code>. You&amp;rsquo;re using the user named &lt;code>git&lt;/code> to connect to your server with the
SSH private key located in &lt;code>~/.ssh/git&lt;/code>.&lt;/p>
&lt;p>Here is the quickest way to deploy your project:&lt;/p></description></item><item><title>Installing Redmine on Centos 6 Dot 2 With Mysql and Apache</title><link>http://mrtn.me/posts/2012/07/06/installing-redmine-on-centos-6-dot-2-with-mysql-and-apache/</link><pubDate>Fri, 06 Jul 2012 00:00:00 +0000</pubDate><author>antoine@mrtn.me (Antoine Martin)</author><guid>http://mrtn.me/posts/2012/07/06/installing-redmine-on-centos-6-dot-2-with-mysql-and-apache/</guid><description>&lt;p>I needed recently to install the excellent project management tool
&lt;a href="http://www.redmine.org/" target="_blank" rel="noopener noreffer ">Redmine&lt;/a> on a &lt;a href="http://www.centos.org/" target="_blank" rel="noopener noreffer ">CentOS&lt;/a> 6.2
machine. There are some tutorials on the Web
(&lt;a href="http://www.redmine.org/projects/redmine/wiki/How_to_Install_Redmine_on_CentOS_%28Detailed%29" target="_blank" rel="noopener noreffer ">here&lt;/a>
or
&lt;a href="http://luzem.dyndns.org/2011/04/14/install-redmine-in-rhel6-and-rh-based-distributions/" target="_blank" rel="noopener noreffer ">here&lt;/a>)
but they are a little bit outdated. The following is a method that works as of
today.&lt;/p>
&lt;!-- More -->
&lt;h2 id="pre-requisites">Pre-requisites&lt;/h2>
&lt;p>Logged as root, install the following packages:&lt;/p>
&lt;div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
 &lt;div class="code-header language-sh">
 &lt;span class="code-title">&lt;i class="arrow fas fa-angle-right fa-fw" aria-hidden="true">&lt;/i>&lt;/span>
 &lt;span class="ellipses">&lt;i class="fas fa-ellipsis-h fa-fw" aria-hidden="true">&lt;/i>&lt;/span>
 &lt;span class="copy" title="Copy to clipboard">&lt;i class="far fa-copy fa-fw" aria-hidden="true">&lt;/i>&lt;/span>
 &lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">yum install make gcc gcc-c++ zlib-devel ruby-devel rubygems ruby-libs apr-devel apr-util-devel httpd-devel mysql-devel mysql-server automake autoconf ImageMagick ImageMagick-devel curl-devel&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;p>And then install the &lt;code>bundle&lt;/code> ruby gem:&lt;/p></description></item><item><title>Start a Virtualenv Django Shell From the Linux Desktop</title><link>http://mrtn.me/posts/2012/03/13/start-a-virtualenv-django-shell-from-the-linux-desktop/</link><pubDate>Tue, 13 Mar 2012 00:00:00 +0000</pubDate><author>antoine@mrtn.me (Antoine Martin)</author><guid>http://mrtn.me/posts/2012/03/13/start-a-virtualenv-django-shell-from-the-linux-desktop/</guid><description>&lt;p>If you are tired to fire a terminal window, &lt;code>cd&lt;/code> to your project directory and
activate your python &lt;code>virtualenv&lt;/code> to get to your Django project, you will find
here some tips to improve things a little bit.&lt;/p>
&lt;!-- more -->
&lt;p>This tip is divided in two parts :&lt;/p>
&lt;ol>
&lt;li>First we create a shell startup script that &lt;em>activates&lt;/em> the &lt;code>virtualenv&lt;/code>,
bash completion and &lt;code>cd&lt;/code> in the project directory.&lt;/li>
&lt;li>Then we create a
&lt;a href="http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html" target="_blank" rel="noopener noreffer ">Linux Desktop Entry&lt;/a>
file That spawns a console in our environment.&lt;/li>
&lt;/ol>
&lt;p>Here you have the startup script:&lt;/p></description></item></channel></rss>