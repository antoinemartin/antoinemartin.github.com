<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>linux - Tag - mrtn.me</title><link>http://mrtn.me/tags/linux/</link><description>linux - Tag - mrtn.me</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>antoine@mrtn.me (Antoine Martin)</managingEditor><webMaster>antoine@mrtn.me (Antoine Martin)</webMaster><lastBuildDate>Thu, 25 Oct 2012 00:00:00 +0000</lastBuildDate><atom:link href="http://mrtn.me/tags/linux/" rel="self" type="application/rss+xml"/><item><title>Unlock and Root a Nexus Device</title><link>http://mrtn.me/posts/2012/10/25/unlock-and-root-a-nexus-device/</link><pubDate>Thu, 25 Oct 2012 00:00:00 +0000</pubDate><author>Antoine Martin</author><guid>http://mrtn.me/posts/2012/10/25/unlock-and-root-a-nexus-device/</guid><description>Having an unlocked and rooted device provides several advantages :
Easy backup and restore with Nandroid backup, Easy firmware replacement and updates installation, Advanced debugging capabilities. The following instructions allow unlocking and rooting a Nexus device (Galaxy Nexus, Nexus 7) from the command line on a Linux machine. It involves:
Backuping your device, Unlocking the bootloader, Restoring the backup, Rooting the device. Prerequisites Here is the list of prerequisites :</description></item><item><title>Quickly Deploy a Git Project on a Server With Ssh</title><link>http://mrtn.me/posts/2012/10/24/quickly-deploy-a-git-project-on-a-server-with-ssh/</link><pubDate>Wed, 24 Oct 2012 00:00:00 +0000</pubDate><author>Antoine Martin</author><guid>http://mrtn.me/posts/2012/10/24/quickly-deploy-a-git-project-on-a-server-with-ssh/</guid><description>So you have this brand new project my_project of yours with your local Git repository set up and you want to quickly make it available for others to clone on your repository server.
All your projects are located in your server git.mycompany.com under /srv/git. You&amp;rsquo;re using the user named git to connect to your server with the SSH private key located in ~/.ssh/git.
Here is the quickiest way to deploy your projet:</description></item><item><title>Installing Redmine on Centos 6 Dot 2 Wiht Mysql and Apache</title><link>http://mrtn.me/posts/2012/07/06/installing-redmine-on-centos-6-dot-2-wiht-mysql-and-apache/</link><pubDate>Fri, 06 Jul 2012 00:00:00 +0000</pubDate><author>Antoine Martin</author><guid>http://mrtn.me/posts/2012/07/06/installing-redmine-on-centos-6-dot-2-wiht-mysql-and-apache/</guid><description>I needed recently to install the excellent project management tool Redmine on a CentOS 6.2 machine. There are some tutorials on the Web (here or here) but they are a little bit outdated. The following is a method that works as of today.
Pre-requisites Logged as root, install the following packages:
1 yum install make gcc gcc-c++ zlib-devel ruby-devel rubygems ruby-libs apr-devel apr-util-devel httpd-devel mysql-devel mysql-server automake autoconf ImageMagick ImageMagick-devel curl-devel And then install the bundle ruby gem:</description></item><item><title>Start a Virtualenv Django Shell From the Linux Desktop</title><link>http://mrtn.me/posts/2012/03/13/start-a-virtualenv-django-shell-from-the-linux-desktop/</link><pubDate>Tue, 13 Mar 2012 00:00:00 +0000</pubDate><author>Antoine Martin</author><guid>http://mrtn.me/posts/2012/03/13/start-a-virtualenv-django-shell-from-the-linux-desktop/</guid><description>If you are tired to fire a terminal window, cd to your project directory and activate your python virtualenv to get to your Django project, you will find here some tips to improve things a little bit.
This tip is divided in two parts :
First we create a shell startup script that activates the virtualenv, bash completion and cd in the project directory. Then we create a Linux Desktop Entry file That spawns a console in our environment.</description></item></channel></rss>